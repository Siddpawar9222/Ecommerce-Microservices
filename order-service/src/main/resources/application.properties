spring.application.name=order-service

#spring-data-jpa configuration
aws.access-key=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
aws.secret-key=xxxxxxxxxxxxxxxxxxxxxxxxxxxxxxx
aws.rds-dbName=rds-db-credential
aws.regionName=ap-south-1
aws.databaseName=ecommerce_microservices
spring.jpa.hibernate.ddl-auto=update
spring.jpa.show-sql=true

#Port on which application should run
server.port=8081


#Circuit breaker and health
management.endpoints.web.exposure.include=*
management.health.circuitbreakers.enabled=true
management.endpoint.health.show-details=always

#Resilinece4j Properties
resilience4j.circuitbreaker.instances.inventory.registerHealthIndicator=true
resilience4j.circuitbreaker.instances.inventory.event-consumer-buffer-size=10
resilience4j.circuitbreaker.instances.inventory.slidingWindowType=COUNT_BASED
resilience4j.circuitbreaker.instances.inventory.slidingWindowSize=5
resilience4j.circuitbreaker.instances.inventory.failureRateThreshold=50
resilience4j.circuitbreaker.instances.inventory.waitDurationInOpenState=5s
resilience4j.circuitbreaker.instances.inventory.permittedNumberOfCallsInHalfOpenState=3
resilience4j.circuitbreaker.instances.inventory.automaticTransitionFromOpenToHalfOpenEnabled=true

##Resilinece4j Timeout properties
resilience4j.timelimiter.instances.inventory.timeout-duration=10s

#Resilinece4j Retry properties
resilience4j.retry.instances.inventory.max-attempts=3
resilience4j.retry.instances.inventory.wait-duration=5s
resilience4j.retry.instances.inventory.enable-exponential-backoff=true

#Eureka Client Config
#eureka.client.serviceUrl.defaultZone= http://localhost:8761/eureka/
eureka.client.serviceUrl.defaultZone= http://eureka:password@${EUREKA_SERVER:localhost}:8761/eureka/

#Zipkin
#management.zipkin.tracing.endpoint= http://localhost:9411/
management.zipkin.tracing.endpoint=http://${ZIPKIN_SERVER:localhost}:9411/api/v2/spans
management.tracing.sampling.probability=1.0

##Kafka properties
spring.kafka.bootstrap-servers=${KAFKA_SERVER:localhost}:9092
spring.kafka.template.default-topic=notificationTopic
spring.kafka.producer.key-serializer=org.apache.kafka.common.serialization.StringSerializer
spring.kafka.producer.value-serializer=org.springframework.kafka.support.serializer.JsonSerializer
spring.kafka.producer.properties.spring.json.type.mapping=event:com.ecommerce.orderservice.event.OrderPlacedEvent
